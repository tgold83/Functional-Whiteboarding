Input: "aaabccdddda"
Output: "3ab2c4da"

//no recursion
function stringCompression(input) {
	let output = 0;
  let counter = 0;
  for (let x = 0; x < input.length; x++) {
  	counter = 1;
    while (input[x] === input[x+1]) {
    	counter++;
      x++;
    }
    if (counter != 1) {
    	output += (counter)
    }
    output += input[x];
  }
  return output;
}

//recursion
function stringCompression(input, output, counter) {
  if (output === "") {
    return output;
  }
  if (input[0] === input[1]) {
    counter ++;
  } else {
    if (counter != 1) {
      output += counter;
      counter = 1;
    }
    output += input[0];
  }
  return stringCompression(input.substring(1), output, counter);
}